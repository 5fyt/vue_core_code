{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["//保存Array构造函数的原型\r\nlet oldArrayProto = Array.prototype\r\n//Object.create() 创建一个新的对象，并将指定的对象上的原型继承给新对象\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\nlet methods = ['push', 'unshift', 'pop', 'shift', 'reverse', 'sort', 'splice'] //改变数组的方法\r\nmethods.forEach((item) => {\r\n  //在新对象的原型上调用数组上本身原型上的方法 （这种思想叫做代码切片）\r\n  newArrayProto[item] = function (...args) {\r\n    const result = oldArrayProto[item].call(this, ...args)\r\n    let insertd\r\n     //当前的this指向的是 arr.push 谁调用的push this指向的是谁,为了让这里调用Observer类上的observeArray函数\r\n    let ob = this._ob_ \r\n    switch (item) {\r\n      case 'push':\r\n      case 'unshift':\r\n        insertd = args\r\n        break\r\n      case 'splice': //args.splice(0,1,{a:2}) {a:2} 就是新增的数据 args=(0,1,{a:2})\r\n        insertd = args.slice(2)\r\n      default:\r\n        break\r\n    }\r\n    if (insertd) {\r\n      ob.observeArray(insertd) \r\n    }\r\n\r\n    return result\r\n  }\r\n})\r\n","import { newArrayProto } from './array'\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    //将类实例赋值给_ob_属性,如果给_ob_可执行枚举，那样会让他爆栈，递归死循环\r\n    Object.defineProperty(data,'_ob_',{\r\n      enumerable:false,\r\n      value:this\r\n    })\r\n   \r\n    //如果data是数组的时候就不应该在用观测对象的方式来对数组做响应式\r\n    if (Array.isArray(data)) {\r\n      //重写data中数组的七个方法,保留原来的数组的特性，但是可以在新的对象原型添加想添加的方法\r\n      data._proto_ = newArrayProto\r\n      this.observeArray(data) //如果数组中的是对象值就可以继续监听到对象里面的变化 ['a','s',{name:'ss'}]\r\n      //如果data是数组，但是数组值发生了变化，\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n  walk(data) {\r\n    //重新定义属性\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]))\r\n  }\r\n  observeArray(data) {\r\n    data.forEach((item) => observe(item))\r\n  }\r\n}\r\nfunction defineReactive(target, key, value) {\r\n  //递归，如果value里面还有对象时，需要继续遍历在做劫持\r\n  observe(value)\r\n  //将data里的属性都做劫持，对象属性值更新，原来的值也要更新\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      if (newValue == value) {\r\n        return\r\n      }\r\n      //如果 vm.name={a:1} 是通过这个的方式来设置值，他也要监听到设置值中的对象\r\n      observe(newValue)\r\n      value = newValue\r\n    },\r\n  })\r\n}\r\nexport function observe(data) {\r\n  //只能对对象和已存在的对象进行观测\r\n  if (typeof data !== 'object' || data == null) {\r\n    return\r\n  }\r\n\r\n  return new Observer(data) //更方便写出多种情况的观测数据\r\n}\r\n","import { observe } from './observe/index'\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n  //opts 选项里面可能还有props,watch,data .... 等选项\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n//将vm实例上的_data属性再次代理，可以达到直接用vm来访问data里面的属性的效果\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key] //vm._data.name\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    },\r\n  })\r\n}\r\n//对options里的data数据进行初始化\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  //data 的数据可能是data：{} 也可能是函数data(){return {}}\r\n  data = typeof data === 'function' ? data.call(vm) : data\r\n  console.log(data)\r\n  vm._data = data //将这个data数据也放在实例上，要不你就的用vm.$options.data.xxx这种方式去访问属性，\r\n  //观测数据，对这个数据进行响应式封装\r\n  observe(data)\r\n  //要将vm.name => vm._data.name 代理成这样\r\n  for (let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n}\r\n","import { initState } from \"./state\"\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this //保存实例，this指向的是实例\r\n    vm.$options = options //获取Vue构造函数中的选项参数\r\n    //初始化状态\r\n    initState(vm)\r\n  }\r\n}\r\n","import { initMixin } from './init'\r\n/**\r\n * 创建Vue构造函数，在构造函数上创建一个初始化函数，\r\n * 将每个函数都单独封装成一个文件，互相不会影响\r\n */\r\nfunction Vue(options) {\r\n  this._init(options)\r\n}\r\ninitMixin(Vue)\r\nexport default Vue\r\n"],"names":["oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","item","_oldArrayProto$item","_len","arguments","length","args","_key","result","call","apply","concat","insertd","ob","_ob_","slice","observeArray","Observer","data","_classCallCheck","defineProperty","enumerable","value","isArray","_proto_","walk","_createClass","key","keys","defineReactive","observe","target","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","console","log","_data","initMixin","Vue","_init","options"],"mappings":"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"}