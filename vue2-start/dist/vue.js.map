{"version":3,"file":"vue.js","sources":["../src/compiler/index.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 它匹配到的分组是一个 标签名 <xxx 匹配到的是开始标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配的是</xxx> 最终匹配到的分组就是结束标签的名字\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ //匹配属性\r\n// 第一个分组是属性的key value 就是分组3/分组4/分组5\r\nconst startTagClose = /^\\s*(\\/?)>/ // <div> <br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r|\\n)+?)\\}\\}/g //{{assd}} 匹配到的内容就是我们表达式的变量\r\n\r\n//对模板进行编译处理\r\nfunction parseHTML(html) {\r\n  const ELEMENT_TYPE = 1\r\n  const TEXT_TYPE = 3\r\n  const stack = [] //用于存放元素的\r\n  let currentParent = null //指向栈中的最后一个\r\n  let root\r\n  //最终需要转化成一颗抽象语法树\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag: tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    }\r\n  }\r\n  function advance(n) {\r\n    html = html.substring(n) //删除已经匹配到的内容\r\n  }\r\n  function start(tag, attrs) {\r\n    let node = createASTElement(tag, attrs) //创造一个ast节点\r\n    if (!root) {\r\n      //看一下是否为空树\r\n      root = node //如果为空则当前是数的根节点\r\n    }\r\n    if (currentParent) {\r\n      node.parent = currentParent\r\n      currentParent.children.push(node)\r\n    }\r\n    stack.push(node)\r\n    currentParent = node //currentParent 为栈中的最后一个\r\n    console.log(tag, attrs, '开始')\r\n  }\r\n  function chars(text) {\r\n    text = text.replace(/\\s/g, '') //删除空格\r\n\r\n    //文本直接放在当前指向的节点中\r\n    text &&\r\n      currentParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n        parent: currentParent,\r\n      })\r\n  }\r\n  function end(tag) {\r\n    stack.pop() //删除最后一个\r\n    currentParent = stack[stack.length - 1] //更新当前指向的节点\r\n    console.log(tag, '结束')\r\n  }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen)\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1], //标签名\r\n        attrs: [],\r\n      }\r\n      advance(start[0].length) //匹配后就进行删除\r\n      //如果匹配的不是开始标签的结束 就一直匹配下去\r\n      let attr, end\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        //删除匹配到的属性\r\n        advance(attr[0].length)\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5],\r\n        })\r\n      }\r\n      if (end) {\r\n        advance(end[0].length) //把开始标签的结束符删除\r\n      }\r\n      return match\r\n    }\r\n\r\n    return false\r\n  }\r\n  while (html) {\r\n    //如果textEnd 为0 说明是一个开始标签或者结束标签\r\n    //如果textEnd 不为0 说明是一个结束标签\r\n    let textEnd = html.indexOf('<') //如果indexof中的索引是0 说明是个标签\r\n    if (textEnd == 0) {\r\n      const startTagMatch = parseStartTag() //开始标签的匹配结果\r\n\r\n      if (startTagMatch) {\r\n        //解析到开始标签\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n\r\n      //解析到结束标签\r\n      let endTagMatch = html.match(endTag)\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length)\r\n        end(endTagMatch.tagName, endTagMatch.attrs)\r\n        continue\r\n      }\r\n    }\r\n    //\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd) //文本内容\r\n      if (text) {\r\n        chars(text)\r\n        advance(text.length) //解析到文本\r\n        console.log(html)\r\n      }\r\n    }\r\n  }\r\n  console.log('root', root)\r\n}\r\n\r\n//对模板进行编译处理\r\nexport function compilerToFunction(template) {\r\n  //  1.就是将template转换成ast语法树\r\n  //  2.生成的render方法（render方法执行后的返回的结果就是虚拟DOM)\r\n\r\n  let ast = parseHTML(template)\r\n}\r\n","//保存Array构造函数的原型\r\nlet oldArrayProto = Array.prototype\r\n//Object.create() 创建一个新的对象，并将指定的对象上的原型继承给新对象\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\nlet methods = ['push', 'unshift', 'pop', 'shift', 'reverse', 'sort', 'splice'] //改变数组的方法\r\nmethods.forEach((item) => {\r\n  //在新对象的原型上调用数组上本身原型上的方法 （这种思想叫做代码切片）\r\n  newArrayProto[item] = function (...args) {\r\n    const result = oldArrayProto[item].call(this, ...args)\r\n    let insertd\r\n     //当前的this指向的是 arr.push 谁调用的push this指向的是谁,为了让这里调用Observer类上的observeArray函数\r\n    let ob = this._ob_ \r\n    switch (item) {\r\n      case 'push':\r\n      case 'unshift':\r\n        insertd = args\r\n        break\r\n      case 'splice': //args.splice(0,1,{a:2}) {a:2} 就是新增的数据 args=(0,1,{a:2})\r\n        insertd = args.slice(2)\r\n      default:\r\n        break\r\n    }\r\n    if (insertd) {\r\n      ob.observeArray(insertd) \r\n    }\r\n\r\n    return result\r\n  }\r\n})\r\n","import { newArrayProto } from './array'\r\n\r\nclass Observer {\r\n  constructor(data) {\r\n    //将类实例赋值给_ob_属性,如果给_ob_可执行枚举，那样会让他爆栈，递归死循环\r\n    Object.defineProperty(data,'_ob_',{\r\n      enumerable:false,\r\n      value:this\r\n    })\r\n   \r\n    //如果data是数组的时候就不应该在用观测对象的方式来对数组做响应式\r\n    if (Array.isArray(data)) {\r\n      //重写data中数组的七个方法,保留原来的数组的特性，但是可以在新的对象原型添加想添加的方法\r\n      data._proto_ = newArrayProto\r\n      this.observeArray(data) //如果数组中的是对象值就可以继续监听到对象里面的变化 ['a','s',{name:'ss'}]\r\n      //如果data是数组，但是数组值发生了变化，\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n  walk(data) {\r\n    //重新定义属性\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]))\r\n  }\r\n  observeArray(data) {\r\n    data.forEach((item) => observe(item))\r\n  }\r\n}\r\nfunction defineReactive(target, key, value) {\r\n  //递归，如果value里面还有对象时，需要继续遍历在做劫持\r\n  observe(value)\r\n  //将data里的属性都做劫持，对象属性值更新，原来的值也要更新\r\n  Object.defineProperty(target, key, {\r\n    get() {\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      if (newValue == value) {\r\n        return\r\n      }\r\n      //如果 vm.name={a:1} 是通过这个的方式来设置值，他也要监听到设置值中的对象\r\n      observe(newValue)\r\n      value = newValue\r\n    },\r\n  })\r\n}\r\nexport function observe(data) {\r\n  //只能对对象和已存在的对象进行观测\r\n  if (typeof data !== 'object' || data == null) {\r\n    return\r\n  }\r\n\r\n  return new Observer(data) //更方便写出多种情况的观测数据\r\n}\r\n","import { observe } from './observe/index'\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n  //opts 选项里面可能还有props,watch,data .... 等选项\r\n  if (opts.data) {\r\n    initData(vm)\r\n  }\r\n}\r\n//将vm实例上的_data属性再次代理，可以达到直接用vm来访问data里面的属性的效果\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key] //vm._data.name\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    },\r\n  })\r\n}\r\n//对options里的data数据进行初始化\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  //data 的数据可能是data：{} 也可能是函数data(){return {}}\r\n  data = typeof data === 'function' ? data.call(vm) : data\r\n  console.log(data)\r\n  vm._data = data //将这个data数据也放在实例上，要不你就的用vm.$options.data.xxx这种方式去访问属性，\r\n  //观测数据，对这个数据进行响应式封装\r\n  observe(data)\r\n  //要将vm.name => vm._data.name 代理成这样\r\n  for (let key in data) {\r\n    proxy(vm, '_data', key)\r\n  }\r\n}\r\n","import { compilerToFunction } from './compiler/index'\r\nimport { initState } from './state'\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this //保存实例，this指向的是实例\r\n    vm.$options = options //获取Vue构造函数中的选项参数\r\n    //初始化状态\r\n    initState(vm)\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el) //实现数据的挂载\r\n    }\r\n  }\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this //保存实例\r\n\r\n    el = document.querySelector(el) //获取挂载元素\r\n    let ops = vm.$options\r\n    if (!ops.render) {\r\n      //先进行查找有没有render函数，\r\n      let template //没有render看一下是否写了template,没写template 采用外部的template\r\n      if (!ops.template && el) {\r\n        //没有写模板，但是有el\r\n        template = el.outerHTML\r\n      } else {\r\n        if (el) {\r\n          template = ops.template //如果有el 则采用模板的内容\r\n        }\r\n      }\r\n      //写了template就用 写了的template\r\n      if (template) {\r\n        const render = compilerToFunction(template)\r\n        ops.render = render //jsx 最终会被编译成h('xxx')\r\n      }\r\n      ops.render //最终会获取render方法\r\n\r\n      //script 标签引用的vue.global.js 这个编译过程是在浏览器运行的\r\n      //runtime 是不包含模板编译的，整个编译时在打包的时候通过loader来转译.vue文件的，用runtime的时候不能使用template\r\n      console.log(template)\r\n    }\r\n  }\r\n}\r\n","import { initMixin } from './init'\r\n/**\r\n * 创建Vue构造函数，在构造函数上创建一个初始化函数，\r\n * 将每个函数都单独封装成一个文件，互相不会影响\r\n */\r\nfunction Vue(options) {\r\n  this._init(options)\r\n}\r\ninitMixin(Vue)\r\nexport default Vue\r\n"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","advance","n","substring","start","node","push","console","log","chars","text","replace","end","pop","length","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","compilerToFunction","template","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","item","_oldArrayProto$item","_len","arguments","args","_key","result","call","apply","insertd","ob","_ob_","slice","observeArray","Observer","data","_classCallCheck","defineProperty","enumerable","isArray","_proto_","walk","_createClass","key","keys","defineReactive","observe","target","get","set","newValue","_typeof","initState","vm","opts","$options","initData","proxy","_data","initMixin","Vue","_init","options","el","$mount","document","querySelector","ops","render","outerHTML"],"mappings":";;;;;;EAAA,IAAMA,MAAM,GAAiC,8BAAA,CAAA;EAC7C,IAAMC,YAAY,UAAAC,MAAA,CAAUF,MAAM,EAAAE,OAAAA,CAAAA,CAAAA,MAAA,CAAQF,MAAM,EAAG,GAAA,CAAA,CAAA;EACnD,IAAMG,YAAY,GAAG,IAAIC,MAAM,CAAA,IAAA,CAAAF,MAAA,CAAMD,YAAY,CAAE,CAAC,CAAC;EACrD,IAAMI,MAAM,GAAG,IAAID,MAAM,CAAA,OAAA,CAAAF,MAAA,CAASD,YAAY,EAAQ,QAAA,CAAA,CAAC,CAAC;EACxD,IAAMK,SAAS,GACb,2EAA2E,CAAC;EAC9E;EACA,IAAMC,aAAa,GAAG,YAAY,CAAC;;EAGnC;EACA,SAASC,SAASA,CAACC,IAAI,EAAE;IACvB,IAAMC,YAAY,GAAG,CAAC,CAAA;IACtB,IAAMC,SAAS,GAAG,CAAC,CAAA;IACnB,IAAMC,KAAK,GAAG,EAAE,CAAC;IACjB,IAAIC,aAAa,GAAG,IAAI,CAAC;EACzB,EAAA,IAAIC,IAAI,CAAA;EACR;EACA,EAAA,SAASC,gBAAgBA,CAACC,GAAG,EAAEC,KAAK,EAAE;MACpC,OAAO;EACLD,MAAAA,GAAG,EAAEA,GAAG;EACRE,MAAAA,IAAI,EAAER,YAAY;EAClBS,MAAAA,QAAQ,EAAE,EAAE;EACZF,MAAAA,KAAK,EAALA,KAAK;EACLG,MAAAA,MAAM,EAAE,IAAA;OACT,CAAA;EACH,GAAA;IACA,SAASC,OAAOA,CAACC,CAAC,EAAE;EAClBb,IAAAA,IAAI,GAAGA,IAAI,CAACc,SAAS,CAACD,CAAC,CAAC,CAAC;EAC3B,GAAA;;EACA,EAAA,SAASE,KAAKA,CAACR,GAAG,EAAEC,KAAK,EAAE;MACzB,IAAIQ,IAAI,GAAGV,gBAAgB,CAACC,GAAG,EAAEC,KAAK,CAAC,CAAC;MACxC,IAAI,CAACH,IAAI,EAAE;EACT;QACAA,IAAI,GAAGW,IAAI,CAAC;EACd,KAAA;;EACA,IAAA,IAAIZ,aAAa,EAAE;QACjBY,IAAI,CAACL,MAAM,GAAGP,aAAa,CAAA;EAC3BA,MAAAA,aAAa,CAACM,QAAQ,CAACO,IAAI,CAACD,IAAI,CAAC,CAAA;EACnC,KAAA;EACAb,IAAAA,KAAK,CAACc,IAAI,CAACD,IAAI,CAAC,CAAA;MAChBZ,aAAa,GAAGY,IAAI,CAAC;MACrBE,OAAO,CAACC,GAAG,CAACZ,GAAG,EAAEC,KAAK,EAAE,IAAI,CAAC,CAAA;EAC/B,GAAA;IACA,SAASY,KAAKA,CAACC,IAAI,EAAE;MACnBA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;;EAE/B;EACAD,IAAAA,IAAI,IACFjB,aAAa,CAACM,QAAQ,CAACO,IAAI,CAAC;EAC1BR,MAAAA,IAAI,EAAEP,SAAS;EACfmB,MAAAA,IAAI,EAAJA,IAAI;EACJV,MAAAA,MAAM,EAAEP,aAAAA;EACV,KAAC,CAAC,CAAA;EACN,GAAA;IACA,SAASmB,GAAGA,CAAChB,GAAG,EAAE;EAChBJ,IAAAA,KAAK,CAACqB,GAAG,EAAE,CAAC;MACZpB,aAAa,GAAGD,KAAK,CAACA,KAAK,CAACsB,MAAM,GAAG,CAAC,CAAC,CAAC;EACxCP,IAAAA,OAAO,CAACC,GAAG,CAACZ,GAAG,EAAE,IAAI,CAAC,CAAA;EACxB,GAAA;IACA,SAASmB,aAAaA,GAAG;EACvB,IAAA,IAAMX,KAAK,GAAGf,IAAI,CAAC2B,KAAK,CAACjC,YAAY,CAAC,CAAA;EACtC,IAAA,IAAIqB,KAAK,EAAE;EACT,MAAA,IAAMY,KAAK,GAAG;EACZC,QAAAA,OAAO,EAAEb,KAAK,CAAC,CAAC,CAAC;EAAE;EACnBP,QAAAA,KAAK,EAAE,EAAA;SACR,CAAA;QACDI,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAACU,MAAM,CAAC,CAAC;EACzB;QACA,IAAII,IAAI,EAAEN,IAAG,CAAA;QACb,OACE,EAAEA,IAAG,GAAGvB,IAAI,CAAC2B,KAAK,CAAC7B,aAAa,CAAC,CAAC,KACjC+B,IAAI,GAAG7B,IAAI,CAAC2B,KAAK,CAAC9B,SAAS,CAAC,CAAC,EAC9B;EACA;EACAe,QAAAA,OAAO,CAACiB,IAAI,CAAC,CAAC,CAAC,CAACJ,MAAM,CAAC,CAAA;EACvBE,QAAAA,KAAK,CAACnB,KAAK,CAACS,IAAI,CAAC;EACfa,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAC,CAAC;EACbE,UAAAA,KAAK,EAAEF,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAA;EACrC,SAAC,CAAC,CAAA;EACJ,OAAA;EACA,MAAA,IAAIN,IAAG,EAAE;UACPX,OAAO,CAACW,IAAG,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC,CAAC;EACzB,OAAA;;EACA,MAAA,OAAOE,KAAK,CAAA;EACd,KAAA;EAEA,IAAA,OAAO,KAAK,CAAA;EACd,GAAA;EACA,EAAA,OAAO3B,IAAI,EAAE;EACX;EACA;MACA,IAAIgC,OAAO,GAAGhC,IAAI,CAACiC,OAAO,CAAC,GAAG,CAAC,CAAC;MAChC,IAAID,OAAO,IAAI,CAAC,EAAE;EAChB,MAAA,IAAME,aAAa,GAAGR,aAAa,EAAE,CAAC;;EAEtC,MAAA,IAAIQ,aAAa,EAAE;EACjB;UACAnB,KAAK,CAACmB,aAAa,CAACN,OAAO,EAAEM,aAAa,CAAC1B,KAAK,CAAC,CAAA;EACjD,QAAA,SAAA;EACF,OAAA;;EAEA;EACA,MAAA,IAAI2B,WAAW,GAAGnC,IAAI,CAAC2B,KAAK,CAAC/B,MAAM,CAAC,CAAA;EACpC,MAAA,IAAIuC,WAAW,EAAE;EACfvB,QAAAA,OAAO,CAACuB,WAAW,CAAC,CAAC,CAAC,CAACV,MAAM,CAAC,CAAA;UAC9BF,GAAG,CAACY,WAAW,CAACP,OAAO,EAAEO,WAAW,CAAC3B,KAAK,CAAC,CAAA;EAC3C,QAAA,SAAA;EACF,OAAA;EACF,KAAA;EACA;MACA,IAAIwB,OAAO,GAAG,CAAC,EAAE;QACf,IAAIX,IAAI,GAAGrB,IAAI,CAACc,SAAS,CAAC,CAAC,EAAEkB,OAAO,CAAC,CAAC;EACtC,MAAA,IAAIX,IAAI,EAAE;UACRD,KAAK,CAACC,IAAI,CAAC,CAAA;EACXT,QAAAA,OAAO,CAACS,IAAI,CAACI,MAAM,CAAC,CAAC;EACrBP,QAAAA,OAAO,CAACC,GAAG,CAACnB,IAAI,CAAC,CAAA;EACnB,OAAA;EACF,KAAA;EACF,GAAA;EACAkB,EAAAA,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEd,IAAI,CAAC,CAAA;EAC3B,CAAA;;EAEA;EACO,SAAS+B,kBAAkBA,CAACC,QAAQ,EAAE;EAC3C;EACA;;EAEA,EAAUtC,SAAS,CAACsC,QAAQ,EAAC;EAC/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECjIA;EACA,IAAIC,aAAa,GAAGC,KAAK,CAACC,SAAS,CAAA;EACnC;EACO,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACL,aAAa,CAAC,CAAA;EACvD,IAAIM,OAAO,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;EAC/EA,OAAO,CAACC,OAAO,CAAC,UAACC,IAAI,EAAK;EACxB;EACAL,EAAAA,aAAa,CAACK,IAAI,CAAC,GAAG,YAAmB;EAAA,IAAA,IAAAC,mBAAA,CAAA;EAAA,IAAA,KAAA,IAAAC,IAAA,GAAAC,SAAA,CAAAxB,MAAA,EAANyB,IAAI,GAAAX,IAAAA,KAAA,CAAAS,IAAA,GAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;EAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAAF,GAAAA,SAAA,CAAAE,IAAA,CAAA,CAAA;EAAA,KAAA;MACrC,IAAMC,MAAM,GAAG,CAAAL,mBAAA,GAAAT,aAAa,CAACQ,IAAI,CAAC,EAACO,IAAI,CAAAC,KAAA,CAAAP,mBAAA,EAAA,CAAC,IAAI,CAAAtD,CAAAA,MAAA,CAAKyD,IAAI,CAAC,CAAA,CAAA;EACtD,IAAA,IAAIK,OAAO,CAAA;EACV;EACD,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,IAAI,CAAA;EAClB,IAAA,QAAQX,IAAI;EACV,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;EACZS,QAAAA,OAAO,GAAGL,IAAI,CAAA;EACd,QAAA,MAAA;EACF,MAAA,KAAK,QAAQ;EAAE;EACbK,QAAAA,OAAO,GAAGL,IAAI,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAA;EAG3B,KAAA;EACA,IAAA,IAAIH,OAAO,EAAE;EACXC,MAAAA,EAAE,CAACG,YAAY,CAACJ,OAAO,CAAC,CAAA;EAC1B,KAAA;EAEA,IAAA,OAAOH,MAAM,CAAA;KACd,CAAA;EACH,CAAC,CAAC;;EC5BqC,IAEjCQ,QAAQ,gBAAA,YAAA;IACZ,SAAAA,QAAAA,CAAYC,IAAI,EAAE;EAAAC,IAAAA,eAAA,OAAAF,QAAA,CAAA,CAAA;EAChB;EACAlB,IAAAA,MAAM,CAACqB,cAAc,CAACF,IAAI,EAAC,MAAM,EAAC;EAChCG,MAAAA,UAAU,EAAC,KAAK;EAChBjC,MAAAA,KAAK,EAAC,IAAA;EACR,KAAC,CAAC,CAAA;;EAEF;EACA,IAAA,IAAIQ,KAAK,CAAC0B,OAAO,CAACJ,IAAI,CAAC,EAAE;EACvB;QACAA,IAAI,CAACK,OAAO,GAAGzB,aAAa,CAAA;EAC5B,MAAA,IAAI,CAACkB,YAAY,CAACE,IAAI,CAAC,CAAC;EACxB;EACF,KAAC,MAAM;EACL,MAAA,IAAI,CAACM,IAAI,CAACN,IAAI,CAAC,CAAA;EACjB,KAAA;EACF,GAAA;EAACO,EAAAA,YAAA,CAAAR,QAAA,EAAA,CAAA;MAAAS,GAAA,EAAA,MAAA;EAAAtC,IAAAA,KAAA,EACD,SAAAoC,IAAKN,CAAAA,IAAI,EAAE;EACT;QACAnB,MAAM,CAAC4B,IAAI,CAACT,IAAI,CAAC,CAAChB,OAAO,CAAC,UAACwB,GAAG,EAAA;UAAA,OAAKE,cAAc,CAACV,IAAI,EAAEQ,GAAG,EAAER,IAAI,CAACQ,GAAG,CAAC,CAAC,CAAA;SAAC,CAAA,CAAA;EAC1E,KAAA;EAAC,GAAA,EAAA;MAAAA,GAAA,EAAA,cAAA;EAAAtC,IAAAA,KAAA,EACD,SAAA4B,YAAaE,CAAAA,IAAI,EAAE;EACjBA,MAAAA,IAAI,CAAChB,OAAO,CAAC,UAACC,IAAI,EAAA;UAAA,OAAK0B,OAAO,CAAC1B,IAAI,CAAC,CAAA;SAAC,CAAA,CAAA;EACvC,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAc,QAAA,CAAA;EAAA,CAAA,EAAA,CAAA;EAEH,SAASW,cAAcA,CAACE,MAAM,EAAEJ,GAAG,EAAEtC,KAAK,EAAE;EAC1C;IACAyC,OAAO,CAACzC,KAAK,CAAC,CAAA;EACd;EACAW,EAAAA,MAAM,CAACqB,cAAc,CAACU,MAAM,EAAEJ,GAAG,EAAE;MACjCK,GAAG,EAAA,SAAAA,MAAG;EACJ,MAAA,OAAO3C,KAAK,CAAA;OACb;MACD4C,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;QACZ,IAAIA,QAAQ,IAAI7C,KAAK,EAAE;EACrB,QAAA,OAAA;EACF,OAAA;EACA;QACAyC,OAAO,CAACI,QAAQ,CAAC,CAAA;EACjB7C,MAAAA,KAAK,GAAG6C,QAAQ,CAAA;EAClB,KAAA;EACF,GAAC,CAAC,CAAA;EACJ,CAAA;EACO,SAASJ,OAAOA,CAACX,IAAI,EAAE;EAC5B;IACA,IAAIgB,OAAA,CAAOhB,IAAI,CAAA,KAAK,QAAQ,IAAIA,IAAI,IAAI,IAAI,EAAE;EAC5C,IAAA,OAAA;EACF,GAAA;EAEA,EAAA,OAAO,IAAID,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC5B;;ECpDO,SAASiB,SAASA,CAACC,EAAE,EAAE;EAC5B,EAAA,IAAMC,IAAI,GAAGD,EAAE,CAACE,QAAQ,CAAA;EACxB;IACA,IAAID,IAAI,CAACnB,IAAI,EAAE;MACbqB,QAAQ,CAACH,EAAE,CAAC,CAAA;EACd,GAAA;EACF,CAAA;EACA;EACA,SAASI,KAAKA,CAACJ,EAAE,EAAEN,MAAM,EAAEJ,GAAG,EAAE;EAC9B3B,EAAAA,MAAM,CAACqB,cAAc,CAACgB,EAAE,EAAEV,GAAG,EAAE;MAC7BK,GAAG,EAAA,SAAAA,MAAG;EACJ,MAAA,OAAOK,EAAE,CAACN,MAAM,CAAC,CAACJ,GAAG,CAAC,CAAC;OACxB;MACDM,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACZG,MAAAA,EAAE,CAACN,MAAM,CAAC,CAACJ,GAAG,CAAC,GAAGO,QAAQ,CAAA;EAC5B,KAAA;EACF,GAAC,CAAC,CAAA;EACJ,CAAA;EACA;EACA,SAASM,QAAQA,CAACH,EAAE,EAAE;EACpB,EAAA,IAAIlB,IAAI,GAAGkB,EAAE,CAACE,QAAQ,CAACpB,IAAI,CAAA;EAC3B;EACAA,EAAAA,IAAI,GAAG,OAAOA,IAAI,KAAK,UAAU,GAAGA,IAAI,CAACR,IAAI,CAAC0B,EAAE,CAAC,GAAGlB,IAAI,CAAA;EACxD3C,EAAAA,OAAO,CAACC,GAAG,CAAC0C,IAAI,CAAC,CAAA;EACjBkB,EAAAA,EAAE,CAACK,KAAK,GAAGvB,IAAI,CAAC;EAChB;IACAW,OAAO,CAACX,IAAI,CAAC,CAAA;EACb;EACA,EAAA,KAAK,IAAIQ,GAAG,IAAIR,IAAI,EAAE;EACpBsB,IAAAA,KAAK,CAACJ,EAAE,EAAE,OAAO,EAAEV,GAAG,CAAC,CAAA;EACzB,GAAA;EACF;;EC9BO,SAASgB,SAASA,CAACC,GAAG,EAAE;EAC7BA,EAAAA,GAAG,CAAC9C,SAAS,CAAC+C,KAAK,GAAG,UAAUC,OAAO,EAAE;MACvC,IAAMT,EAAE,GAAG,IAAI,CAAC;EAChBA,IAAAA,EAAE,CAACE,QAAQ,GAAGO,OAAO,CAAC;EACtB;MACAV,SAAS,CAACC,EAAE,CAAC,CAAA;MAEb,IAAIS,OAAO,CAACC,EAAE,EAAE;EACdV,MAAAA,EAAE,CAACW,MAAM,CAACF,OAAO,CAACC,EAAE,CAAC,CAAC;EACxB,KAAA;KACD,CAAA;;EACDH,EAAAA,GAAG,CAAC9C,SAAS,CAACkD,MAAM,GAAG,UAAUD,EAAE,EAAE;MACnC,IAAMV,EAAE,GAAG,IAAI,CAAC;;EAEhBU,IAAAA,EAAE,GAAGE,QAAQ,CAACC,aAAa,CAACH,EAAE,CAAC,CAAC;EAChC,IAAA,IAAII,GAAG,GAAGd,EAAE,CAACE,QAAQ,CAAA;EACrB,IAAA,IAAI,CAACY,GAAG,CAACC,MAAM,EAAE;EACf;EACA,MAAA,IAAIzD,QAAQ,CAAC;EACb,MAAA,IAAI,CAACwD,GAAG,CAACxD,QAAQ,IAAIoD,EAAE,EAAE;EACvB;UACApD,QAAQ,GAAGoD,EAAE,CAACM,SAAS,CAAA;EACzB,OAAC,MAAM;EACL,QAAA,IAAIN,EAAE,EAAE;EACNpD,UAAAA,QAAQ,GAAGwD,GAAG,CAACxD,QAAQ,CAAC;EAC1B,SAAA;EACF,OAAA;EACA;EACA,MAAA,IAAIA,QAAQ,EAAE;EACZ,QAAA,IAAMyD,MAAM,GAAG1D,kBAAkB,CAACC,QAAQ,CAAC,CAAA;EAC3CwD,QAAAA,GAAG,CAACC,MAAM,GAAGA,MAAM,CAAC;EACtB,OAAA;;QACAD,GAAG,CAACC,MAAM,CAAC;;EAEX;EACA;EACA5E,MAAAA,OAAO,CAACC,GAAG,CAACkB,QAAQ,CAAC,CAAA;EACvB,KAAA;KACD,CAAA;EACH;;ECxCA;EACA;EACA;EACA;EACA,SAASiD,GAAGA,CAACE,OAAO,EAAE;EACpB,EAAA,IAAI,CAACD,KAAK,CAACC,OAAO,CAAC,CAAA;EACrB,CAAA;EACAH,SAAS,CAACC,GAAG,CAAC;;;;;;;;"}